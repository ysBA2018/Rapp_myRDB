# Generated by Django 2.1 on 2018-08-18 09:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TblAfliste',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('af_name', models.CharField(db_column='AF-Name', max_length=150, unique=True, verbose_name='AF-Name')),
                ('neu_ab', models.DateTimeField(db_column='neu ab')),
            ],
            options={
                'verbose_name_plural': 'Übersicht gültiger AFen (tbl_AFListe)',
                'verbose_name': 'Gültige AF',
                'db_table': 'tbl_AFListe',
                'ordering': ['af_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblDb2',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('geloescht', models.TextField(blank=True, db_column='gelöscht', null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=15, null=True)),
                ('creator', models.CharField(blank=True, db_column='CREATOR', max_length=15, null=True)),
                ('table', models.CharField(db_column='TABLE', max_length=31)),
                ('selectauth', models.CharField(blank=True, db_column='SELECTAUTH', max_length=3, null=True)),
                ('insertauth', models.CharField(blank=True, db_column='INSERTAUTH', max_length=3, null=True)),
                ('updateauth', models.CharField(blank=True, db_column='UPDATEAUTH', max_length=3, null=True)),
                ('deleteauth', models.CharField(blank=True, db_column='DELETEAUTH', max_length=3, null=True)),
                ('alterauth', models.CharField(blank=True, db_column='ALTERAUTH', max_length=3, null=True)),
                ('indexauth', models.CharField(blank=True, db_column='INDEXAUTH', max_length=3, null=True)),
                ('grantor', models.CharField(db_column='GRANTOR', max_length=15)),
                ('grantedts', models.CharField(db_column='GRANTEDTS', max_length=63)),
                ('datum', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'DB2 - Berechtigungen (tbl_DB2)',
                'verbose_name': 'DB2-Berechtigung',
                'db_table': 'tbl_DB2',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblGesamt',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tf', models.CharField(db_column='TF', db_index=True, max_length=150, verbose_name='TF')),
                ('tf_beschreibung', models.CharField(blank=True, db_column='TF Beschreibung', db_index=True, max_length=150, null=True, verbose_name='TF-Beschreibung')),
                ('enthalten_in_af', models.CharField(blank=True, db_column='Enthalten_in_AF', db_index=True, max_length=150, null=True, verbose_name='AF')),
                ('tf_kritikalitaet', models.CharField(blank=True, db_column='TF Kritikalität', db_index=True, max_length=150, null=True, verbose_name='TF-Kritikalität')),
                ('tf_eigentuemer_org', models.CharField(blank=True, db_column='TF Eigentümer Org', db_index=True, max_length=150, null=True, verbose_name='TF-Eigentümer-orga')),
                ('gf', models.CharField(blank=True, db_column='GF', db_index=True, max_length=150, null=True, verbose_name='GF')),
                ('vip_kennzeichen', models.CharField(blank=True, db_column='VIP_Kennzeichen', max_length=150, null=True, verbose_name='VIP')),
                ('zufallsgenerator', models.CharField(blank=True, db_column='Zufallsgenerator', max_length=150, null=True, verbose_name='Zufallsgenerator')),
                ('af_gueltig_ab', models.DateTimeField(blank=True, db_column='AF Gültig ab', null=True, verbose_name='AF gültig ab')),
                ('af_gueltig_bis', models.DateTimeField(blank=True, db_column='AF Gültig bis', null=True, verbose_name='AF gültig bis')),
                ('direct_connect', models.CharField(blank=True, db_column='Direct Connect', max_length=8, null=True, verbose_name='Direktverbindung')),
                ('hoechste_kritikalitaet_tf_in_af', models.CharField(blank=True, db_column='Höchste Kritikalität TF in AF', max_length=150, null=True, verbose_name='max. Krit. TF in AF')),
                ('gf_beschreibung', models.CharField(blank=True, db_column='GF Beschreibung', max_length=150, null=True, verbose_name='GF Kurzbeschreibung')),
                ('af_zuweisungsdatum', models.DateTimeField(blank=True, db_column='AF Zuweisungsdatum', db_index=True, null=True, verbose_name='AF Zuweisung')),
                ('datum', models.DateTimeField(db_column='Datum', db_index=True, verbose_name='Recht gefunden am')),
                ('geloescht', models.IntegerField(blank=True, db_column='gelöscht', db_index=True, null=True, verbose_name='gelöscht')),
                ('gefunden', models.IntegerField(blank=True, db_index=True, null=True)),
                ('wiedergefunden', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('geaendert', models.IntegerField(blank=True, db_column='geändert', db_index=True, null=True, verbose_name='AF geändert')),
                ('neueaf', models.CharField(blank=True, db_column='NeueAF', db_index=True, max_length=50, null=True)),
                ('nicht_ai', models.IntegerField(blank=True, db_column='Nicht AI', null=True)),
                ('patchdatum', models.DateTimeField(blank=True, db_column='Patchdatum', db_index=True, null=True)),
                ('wertmodellvorpatch', models.TextField(blank=True, db_column='WertModellVorPatch', null=True)),
                ('loeschdatum', models.DateTimeField(blank=True, db_column='löschdatum', db_index=True, null=True, verbose_name='Löschdatum')),
                ('letzte_aenderung', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name_plural': 'Gesamttabelle Übersicht (tblGesamt)',
                'verbose_name': 'Eintrag der Gesamttabelle (tblGesamt)',
                'db_table': 'tblGesamt',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblGesamtHistorie',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tf', models.CharField(db_column='TF', max_length=150)),
                ('tf_beschreibung', models.CharField(blank=True, db_column='TF Beschreibung', max_length=150, null=True)),
                ('enthalten_in_af', models.CharField(blank=True, db_column='Enthalten in AF', max_length=150, null=True)),
                ('tf_kritikalitaet', models.CharField(blank=True, db_column='TF Kritikalität', max_length=150, null=True)),
                ('tf_eigentuemer_org', models.CharField(blank=True, db_column='TF Eigentümer Org', max_length=150, null=True)),
                ('gf', models.CharField(blank=True, db_column='GF', max_length=150, null=True)),
                ('vip_kennzeichen', models.CharField(blank=True, db_column='VIP Kennzeichen', max_length=150, null=True)),
                ('zufallsgenerator', models.CharField(blank=True, db_column='Zufallsgenerator', max_length=150, null=True)),
                ('datum', models.DateTimeField(db_column='Datum')),
                ('geloescht', models.TextField(blank=True, db_column='gelöscht', null=True)),
                ('gefunden', models.TextField(blank=True, null=True)),
                ('wiedergefunden', models.DateTimeField(blank=True, null=True)),
                ('geaendert', models.TextField(blank=True, db_column='geändert', null=True)),
                ('neueaf', models.CharField(blank=True, db_column='NeueAF', max_length=50, null=True)),
                ('loeschdatum', models.DateTimeField(blank=True, db_column='Löschdatum', null=True)),
                ('id_alt', models.ForeignKey(db_column='ID-alt', on_delete=django.db.models.deletion.PROTECT, to='rapp.TblGesamt')),
            ],
            options={
                'verbose_name_plural': 'Historisierte Einträge der Gesamttabelle (tblGesamtHistorie)',
                'managed': True,
                'verbose_name': 'Historisierter Eintrag der Gesamttabelle (tblGesamtHistorie)',
                'db_table': 'tblGesamtHistorie',
            },
        ),
        migrations.CreateModel(
            name='TblOrga',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('team', models.CharField(db_column='Intern - extern', default='Hä???', max_length=50, unique=True)),
                ('themeneigentuemer', models.CharField(db_column='Themeneigentümer', default='Hä???', max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Organisations-Übersicht (tblOrga)',
                'verbose_name': 'Orga-Information',
                'db_table': 'tblOrga',
                'ordering': ['team'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblPlattform',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tf_technische_plattform', models.CharField(blank=True, db_column='TF Technische Plattform', max_length=32, null=True, unique=True, verbose_name='Plattform')),
            ],
            options={
                'verbose_name_plural': 'Plattform-Übersicht (tblPlattform)',
                'managed': True,
                'verbose_name': 'Plattform',
                'db_table': 'tblPlattform',
            },
        ),
        migrations.CreateModel(
            name='TblRacfGruppen',
            fields=[
                ('group', models.CharField(db_column='Group', max_length=150, primary_key=True, serialize=False)),
                ('test', models.IntegerField(blank=True, db_column='Test', null=True)),
                ('produktion', models.IntegerField(blank=True, db_column='Produktion', null=True)),
                ('readonly', models.IntegerField(blank=True, db_column='Readonly', null=True)),
                ('db2_only', models.IntegerField(blank=True, db_column='DB2-only', null=True)),
                ('stempel', models.DateTimeField(db_column='Stempel')),
            ],
            options={
                'verbose_name_plural': 'RACF - Berechtigungen (tbl_DB2)',
                'verbose_name': 'RACF-Berechtigung',
                'db_table': 'tbl_RACF_Gruppen',
                'ordering': ['group'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblrechteneuvonimport',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('identitaet', models.CharField(db_column='Identität', db_index=True, max_length=150)),
                ('nachname', models.CharField(blank=True, db_column='Nachname', max_length=150, null=True)),
                ('vorname', models.CharField(blank=True, db_column='Vorname', max_length=150, null=True)),
                ('tf_name', models.CharField(blank=True, db_column='TF Name', max_length=150, null=True)),
                ('tf_beschreibung', models.CharField(blank=True, db_column='TF Beschreibung', max_length=150, null=True)),
                ('af_anzeigename', models.CharField(blank=True, db_column='AF Anzeigename', max_length=150, null=True)),
                ('af_beschreibung', models.CharField(blank=True, db_column='AF Beschreibung', max_length=150, null=True)),
                ('hoechste_kritikalitaet_tf_in_af', models.CharField(blank=True, db_column='Höchste Kritikalität TF in AF', max_length=150, null=True)),
                ('tf_eigentuemer_org', models.CharField(blank=True, db_column='TF Eigentümer Org', max_length=150, null=True)),
                ('tf_applikation', models.CharField(blank=True, db_column='TF Applikation', max_length=150, null=True)),
                ('tf_kritikalitaet', models.CharField(blank=True, db_column='TF Kritikalität', max_length=150, null=True)),
                ('gf_name', models.CharField(blank=True, db_column='GF Name', max_length=150, null=True)),
                ('gf_beschreibung', models.CharField(blank=True, db_column='GF Beschreibung', max_length=150, null=True)),
                ('direct_connect', models.CharField(blank=True, db_column='Direct Connect', max_length=150, null=True)),
                ('af_zugewiesen_an_account_name', models.CharField(blank=True, db_column='AF zugewiesen an Account-Name', max_length=150, null=True)),
                ('af_gueltig_ab', models.DateTimeField(blank=True, db_column='AF Gültig ab', null=True)),
                ('af_gueltig_bis', models.DateTimeField(blank=True, db_column='AF Gültig bis', null=True)),
                ('af_zuweisungsdatum', models.DateTimeField(blank=True, db_column='AF Zuweisungsdatum', null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'tblRechteNeuVonImport',
            },
        ),
        migrations.CreateModel(
            name='TblRollehataf',
            fields=[
                ('rollenmappingid', models.AutoField(db_column='RollenMappingID', primary_key=True, serialize=False, verbose_name='ID')),
                ('mussfeld', models.IntegerField(blank=True, db_column='Mussfeld', null=True, verbose_name='Muss')),
                ('bemerkung', models.CharField(blank=True, db_column='Bemerkung', max_length=150, null=True)),
                ('nurxv', models.IntegerField(blank=True, db_column='nurXV', null=True)),
                ('xabcv', models.IntegerField(blank=True, db_column='XABCV', null=True)),
                ('dv', models.IntegerField(blank=True, db_column='DV', null=True)),
                ('af', models.ForeignKey(blank=True, db_column='AF', null=True, on_delete=django.db.models.deletion.PROTECT, to='rapp.TblAfliste', verbose_name='AF')),
            ],
            options={
                'verbose_name_plural': 'Rollen und ihre Arbeitsplatzfunktionen (tbl_RolleHatAF)',
                'verbose_name': 'Rolle und ihre Arbeitsplatzfunktionen',
                'db_table': 'tbl_RolleHatAFNeu',
                'ordering': ['rollenname__rollenname', 'af__af_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblRollen',
            fields=[
                ('rollenname', models.CharField(db_column='RollenName', max_length=150, primary_key=True, serialize=False, verbose_name='Rollen-Name')),
                ('system', models.CharField(db_column='System', max_length=150, verbose_name='System')),
                ('rollenbeschreibung', models.TextField(blank=True, db_column='RollenBeschreibung', null=True)),
                ('datum', models.DateTimeField(db_column='Datum')),
            ],
            options={
                'verbose_name_plural': 'Rollen-Übersicht (tbl_Rollen)',
                'verbose_name': 'Rollenliste',
                'db_table': 'tbl_Rollen',
                'ordering': ['rollenname'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblsachgebiete',
            fields=[
                ('sachgebiet', models.CharField(db_column='Sachgebiet', max_length=150, primary_key=True, serialize=False)),
                ('definition_field', models.CharField(blank=True, db_column='Definition\xa0', max_length=150, null=True)),
                ('verantwortlicher_field', models.CharField(blank=True, db_column='Verantwortlicher\xa0', max_length=150, null=True)),
                ('telefon_verantwortlicher_field', models.CharField(blank=True, db_column='Telefon(Verantwortlicher)\xa0', max_length=150, null=True)),
                ('user_id_verantwortlicher_field', models.CharField(blank=True, db_column='User-ID(Verantwortlicher)\xa0', max_length=150, null=True)),
                ('führungskraft_field', models.CharField(blank=True, db_column='Führungskraft\xa0', max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Übersicht Sachgebiete (tbl_Sachgebiete)',
                'verbose_name': 'Sachgebiet',
                'db_table': 'tblSachgebiete',
                'ordering': ['sachgebiet'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblsubsysteme',
            fields=[
                ('sgss', models.CharField(db_column='SGSS', max_length=150, primary_key=True, serialize=False)),
                ('definition_field', models.CharField(blank=True, db_column='Definition\xa0', max_length=150, null=True)),
                ('verantwortlicher_field', models.CharField(blank=True, db_column='Verantwortlicher\xa0', max_length=150, null=True)),
                ('telefon_verantwortlicher_field', models.CharField(blank=True, db_column='Telefon(Verantwortlicher)\xa0', max_length=150, null=True)),
                ('user_id_verantwortlicher_field', models.CharField(blank=True, db_column='User-ID(Verantwortlicher)\xa0', max_length=150, null=True)),
                ('führungskraft_field', models.CharField(blank=True, db_column='Führungskraft\xa0', max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Übersicht Subsysteme (tbl_Subsysteme)',
                'verbose_name': 'Subsystem',
                'db_table': 'tblSubsysteme',
                'ordering': ['sgss'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblUebersichtAfGfs',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name_gf_neu', models.CharField(blank=True, db_column='Name_GF_Neu', max_length=50, null=True, verbose_name='GF Neu')),
                ('name_af_neu', models.CharField(blank=True, db_column='Name_AF_Neu', max_length=50, null=True, verbose_name='AF Neu')),
                ('kommentar', models.CharField(blank=True, db_column='Kommentar', max_length=150, null=True)),
                ('zielperson', models.CharField(blank=True, db_column='Zielperson', max_length=50, null=True)),
                ('af_text', models.CharField(blank=True, db_column='AF Text', max_length=150, null=True)),
                ('gf_text', models.CharField(blank=True, db_column='GF Text', max_length=150, null=True)),
                ('af_langtext', models.CharField(blank=True, db_column='AF Langtext', max_length=150, null=True)),
                ('af_ausschlussgruppen', models.CharField(blank=True, db_column='AF Ausschlussgruppen', max_length=150, null=True)),
                ('af_einschlussgruppen', models.CharField(blank=True, db_column='AF Einschlussgruppen', max_length=150, null=True)),
                ('af_sonstige_vergabehinweise', models.CharField(blank=True, db_column='AF Sonstige Vergabehinweise', max_length=150, null=True)),
                ('geloescht', models.IntegerField(blank=True, db_column='gelöscht', null=True)),
                ('kannweg', models.IntegerField(blank=True, null=True)),
                ('modelliert', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Erlaubte AF/GF-Kombinationen-Übersicht (tblUebersichtAfGfs)',
                'verbose_name': 'Erlaubte AF/GF-Kombination',
                'db_table': 'tblÜbersichtAF_GFs',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblUserhatrolle',
            fields=[
                ('userundrollenid', models.AutoField(db_column='UserUndRollenID', primary_key=True, serialize=False, verbose_name='ID')),
                ('schwerpunkt_vertretung', models.CharField(blank=True, choices=[('Schwerpunkt', 'Schwerpunktaufgabe'), ('Vertretung', 'Vertretungstätigkeiten, Zweitsysteme'), ('Allgemein', 'Rollen, die nicht Systemen zugeordnet sind')], db_column='Schwerpunkt/Vertretung', max_length=150, null=True)),
                ('bemerkung', models.TextField(blank=True, db_column='Bemerkung', max_length=150, null=True)),
                ('letzte_aenderung', models.DateTimeField(db_column='Letzte Änderung')),
                ('rollenname', models.ForeignKey(blank=True, db_column='RollenName', null=True, on_delete=django.db.models.deletion.PROTECT, to='rapp.TblRollen')),
            ],
            options={
                'verbose_name_plural': 'User und Ihre Rollen (tbl_UserHatRolle)',
                'verbose_name': 'User und Ihre Rollen',
                'db_table': 'tbl_UserHatRolle',
                'ordering': ['userid__name', '-userid__userid', 'schwerpunkt_vertretung', 'rollenname'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblUserIDundName',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='UserID', max_length=50, unique=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=150, null=True)),
                ('zi_organisation', models.CharField(blank=True, db_column='ZI-Organisation', max_length=50, null=True, verbose_name='ZI-Organisation')),
                ('geloescht', models.IntegerField(blank=True, db_column='gelöscht', null=True, verbose_name='gelöscht')),
                ('abteilung', models.CharField(blank=True, db_column='Abteilung', max_length=50, null=True)),
                ('gruppe', models.CharField(blank=True, db_column='Gruppe', max_length=50, null=True)),
                ('orga', models.ForeignKey(db_column='Orga_ID', on_delete=django.db.models.deletion.CASCADE, to='rapp.TblOrga', verbose_name='Team')),
            ],
            options={
                'verbose_name_plural': 'UserID-Name-Übersicht (tblUserIDundName)',
                'verbose_name': 'UserID-Name-Kombination',
                'db_table': 'tblUserIDundName',
                'ordering': ['geloescht', 'name', '-userid'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='tbluserhatrolle',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.PROTECT, to='rapp.TblUserIDundName', to_field='userid', verbose_name='UserID, Name'),
        ),
        migrations.AlterUniqueTogether(
            name='tbluebersichtafgfs',
            unique_together={('name_af_neu', 'name_gf_neu'), ('name_gf_neu', 'name_af_neu')},
        ),
        migrations.AddField(
            model_name='tblrollehataf',
            name='rollenname',
            field=models.ForeignKey(blank=True, db_column='RollenName', null=True, on_delete=django.db.models.deletion.PROTECT, to='rapp.TblRollen'),
        ),
        migrations.AddField(
            model_name='tblgesamthistorie',
            name='modell',
            field=models.ForeignKey(db_column='Modell', on_delete=django.db.models.deletion.CASCADE, to='rapp.TblUebersichtAfGfs'),
        ),
        migrations.AddField(
            model_name='tblgesamthistorie',
            name='plattform',
            field=models.ForeignKey(db_column='Plattform_ID', on_delete=django.db.models.deletion.CASCADE, to='rapp.TblPlattform'),
        ),
        migrations.AddField(
            model_name='tblgesamthistorie',
            name='userid_name',
            field=models.ForeignKey(db_column='UserID + Name_ID', on_delete=django.db.models.deletion.PROTECT, to='rapp.TblUserIDundName'),
        ),
        migrations.AddField(
            model_name='tblgesamt',
            name='modell',
            field=models.ForeignKey(db_column='Modell', on_delete=django.db.models.deletion.CASCADE, to='rapp.TblUebersichtAfGfs'),
        ),
        migrations.AddField(
            model_name='tblgesamt',
            name='plattform',
            field=models.ForeignKey(blank=True, db_column='Plattform_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rapp.TblPlattform', verbose_name='Plattform'),
        ),
        migrations.AddField(
            model_name='tblgesamt',
            name='userid_name',
            field=models.ForeignKey(blank=True, db_column='UserID_Name_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rapp.TblUserIDundName'),
        ),
        migrations.AddField(
            model_name='tbldb2',
            name='grantee',
            field=models.ForeignKey(db_column='grantee', on_delete=django.db.models.deletion.PROTECT, to='rapp.TblRacfGruppen'),
        ),
        migrations.AlterUniqueTogether(
            name='tbluseridundname',
            unique_together={('userid', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='tblrollehataf',
            unique_together={('rollenname', 'af')},
        ),
        migrations.AlterUniqueTogether(
            name='tblgesamt',
            unique_together={('userid_name', 'tf', 'enthalten_in_af', 'plattform', 'gf', 'vip_kennzeichen', 'zufallsgenerator')},
        ),
    ]
